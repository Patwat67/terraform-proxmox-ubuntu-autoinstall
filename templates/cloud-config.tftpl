#cloud-config
bootcmd: 
  - "cat /proc/cmdline > /tmp/cmdline"
  - "sed -i'' 's/$/ autoinstall/g' /tmp/cmdline"
  - "mount -n --bind -o ro /tmp/cmdline /proc/cmdline"

autoinstall:
  version: 1
  locale: ${vm_locale}

  refresh-installer:
    update: ${autoinstall_updates.installer}
    channel: latest/edge

  drivers:
    install: true

  network:
    version: 2
    ethernets:
%{ for name, data in networks}
      ${data.interface_name}:
        match:
            macaddress: ${data.mac}
        set-name: ${data.interface_name}
%{ if data.ipv4 != "dhcp" }
        addresses:
          - ${data.ipv4}
%{ if data.gateway4 != null }
        gateway4: ${data.gateway4}
%{ endif }
        dhcp4: false
%{ else }
        dhcp4: true
%{ endif }
%{ if data.dns_domains != null || data.dns_domains != null }
        nameservers:
%{ if data.dns_domains != null }
          search:
%{ for d in data.dns_domains ~}
            - ${d}
%{ endfor ~}
%{ endif }
%{ if data.dns_servers != null }
          addresses:
%{ for ns in data.dns_servers ~}
            - ${ns}
%{ endfor ~}
%{ endif }
%{ endif }
%{ endfor ~}

  keyboard:
    layout: ${vm_keyboard_layout} 

  storage:
    layout:
      name: lvm
      sizing-policy: all
%{ if LUKS_passphrase != null }
      password: ${LUKS_passphrase}
%{ endif }

  user-data:
    users:
%{ for name, data in user-data ~}
      - name: ${data.username}
%{ if data.system == true }
        gecos: "Terraform"
        system: true
        shell: /usr/sbin/nologin
%{ else }
        primary_group: ${data.username}
%{ if length(data.user_groups) > 0 }
        groups: ${join(",", data.user_groups)}
%{ endif }
        shell: /bin/bash
        lock_passwd: ${data.lock_passwd}
        passwd: ${data.password}
        system: ${data.system}
%{ if contains(data.user_groups, "sudo") }
        sudo: ALL=(ALL) NOPASSWD:ALL
%{ endif }
%{ if data.ssh_import_ids != null }
        ssh_import_id:
%{ for id in data.ssh_import_ids ~}
          - ${id}
%{ endfor ~}
%{ endif }
        ssh_authorized_keys:
%{ for key in concat(data.authorized_keys, [tls_public_key]) ~}
          - ${key}
%{ endfor ~}
%{ endif }
%{ endfor ~}


  late-commands:
    - echo ${vm_name} > /target/etc/hostname
    - echo "127.0.1.1 ${vm_name} ${vm_name}" > /target/etc/hosts
    - curtin in-target -- bash -c 'mkdir -p /etc/ssh/sshd_config.d && echo "PasswordAuthentication no" | tee /etc/ssh/sshd_config.d/no_passwd_auth.conf'
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y qemu-guest-agent ssh-import-id python3
    - curtin in-target -- systemctl start qemu-guest-agent
    - curtin in-target -- systemctl enable qemu-guest-agent
    - curtin in-target -- systemctl disable systemd-networkd-wait-online.service
    - curtin in-target -- systemctl mask systemd-networkd-wait-online.service


  timezone: ${vm_timezone}
  updates: ${autoinstall_updates.packages}
  shutdown: reboot
